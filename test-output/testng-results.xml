<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-22T17:15:21 PST" name="Suite" finished-at="2024-01-22T17:18:24 PST" duration-ms="182991">
    <groups>
      <group name="smoke">
        <method signature="Login.login(java.lang.String,java.lang.String)[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" name="login" class="org.luma.ecommerce.testcases.Login"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-01-22T17:15:21 PST" name="Test" finished-at="2024-01-22T17:18:24 PST" duration-ms="182991">
      <class name="org.luma.ecommerce.testcases.E2EPurchase">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:16:23 PST" name="launchApplication" finished-at="2024-01-22T17:16:32 PST" duration-ms="9221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="purchaseFlow()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:16:32 PST" name="purchaseFlow" finished-at="2024-01-22T17:16:59 PST" duration-ms="26887" status="SKIP">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="radio" class="radio" data-bind="attr: {'aria-labelledby': 'label_method_' + method.method_code + '_' + method.carrier_code + ' ' + 'label_carrier_' + method.method_code + '_' + method.carrier_code,
                    'checked': element.rates().length == 1 || element.isSelected}, value: method.carrier_code + '_' + method.method_code, checked: element.isSelected" aria-labelledby="label_method_flatrate_flatrate label_carrier_flatrate_flatrate" value="flatrate_flatrate" name="ko_unique_1"> is not clickable at point (178, 557). Other element would receive the click: <div class="shipping-address-item selected-item" data-bind="css: {'selected-item' : isSelected() , 'not-selected-item':!isSelected()}">...</div>
  (Session info: chrome=120.0.6099.225)
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ae50bd5016e4ca521fef136816eb88fc, clickElement {id=D4B3EBEA940FD2D70EBBA8E03B03C09E_element_227}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.225, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\ASUSX7~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54787}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54787/devtoo..., se:cdpVersion: 120.0.6099.225, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ae50bd5016e4ca521fef136816eb88fc)] -> xpath: //table[@class='table-checkout-shipping-method']//input[@name='ko_unique_1']]
Session ID: ae50bd5016e4ca521fef136816eb88fc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="radio" class="radio" data-bind="attr: {'aria-labelledby': 'label_method_' + method.method_code + '_' + method.carrier_code + ' ' + 'label_carrier_' + method.method_code + '_' + method.carrier_code,
                    'checked': element.rates().length == 1 || element.isSelected}, value: method.carrier_code + '_' + method.method_code, checked: element.isSelected" aria-labelledby="label_method_flatrate_flatrate label_carrier_flatrate_flatrate" value="flatrate_flatrate" name="ko_unique_1"> is not clickable at point (178, 557). Other element would receive the click: <div class="shipping-address-item selected-item" data-bind="css: {'selected-item' : isSelected() , 'not-selected-item':!isSelected()}">...</div>
  (Session info: chrome=120.0.6099.225)
Build info: version: '4.13.0', revision: 'ba948ece5b*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ae50bd5016e4ca521fef136816eb88fc, clickElement {id=D4B3EBEA940FD2D70EBBA8E03B03C09E_element_227}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.225, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\ASUSX7~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54787}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54787/devtoo..., se:cdpVersion: 120.0.6099.225, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ae50bd5016e4ca521fef136816eb88fc)] -> xpath: //table[@class='table-checkout-shipping-method']//input[@name='ko_unique_1']]
Session ID: ae50bd5016e4ca521fef136816eb88fc
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at org.luma.ecommerce.pages.AddressPage.shippingMethods(AddressPage.java:36)
at org.luma.ecommerce.testcases.E2EPurchase.purchaseFlow(E2EPurchase.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:16:59 PST" name="tearDown" finished-at="2024-01-22T17:16:59 PST" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:16:59 PST" name="launchApplication" finished-at="2024-01-22T17:17:09 PST" duration-ms="9338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="purchaseFlow()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:17:09 PST" name="purchaseFlow" finished-at="2024-01-22T17:17:41 PST" duration-ms="32350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseFlow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.E2EPurchase@3d3e5463]" started-at="2024-01-22T17:17:41 PST" name="tearDown" finished-at="2024-01-22T17:17:42 PST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.luma.ecommerce.testcases.E2EPurchase -->
      <class name="org.luma.ecommerce.testcases.Login">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:15:22 PST" name="launchApplication" finished-at="2024-01-22T17:15:38 PST" duration-ms="16130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:15:38 PST" name="login" data-provider="testData" finished-at="2024-01-22T17:15:46 PST" duration-ms="7242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ashafj11@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashafj11!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:15:46 PST" name="tearDown" finished-at="2024-01-22T17:15:47 PST" duration-ms="761" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:15:47 PST" name="launchApplication" finished-at="2024-01-22T17:15:56 PST" duration-ms="8736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:15:56 PST" name="login" data-provider="testData" finished-at="2024-01-22T17:16:02 PST" duration-ms="6413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carlpenet123@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashafj11!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.Login@265adfad]" started-at="2024-01-22T17:16:03 PST" name="tearDown" finished-at="2024-01-22T17:16:03 PST" duration-ms="726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.luma.ecommerce.testcases.Login -->
      <class name="org.luma.ecommerce.testcases.Sales_Purchase">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.Sales_Purchase@64a40280]" started-at="2024-01-22T17:17:42 PST" name="launchApplication" finished-at="2024-01-22T17:17:51 PST" duration-ms="9154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="sales_purchase_flow()[pri:0, instance:org.luma.ecommerce.testcases.Sales_Purchase@64a40280]" started-at="2024-01-22T17:17:51 PST" name="sales_purchase_flow" finished-at="2024-01-22T17:18:24 PST" duration-ms="32710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sales_purchase_flow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.Sales_Purchase@64a40280]" started-at="2024-01-22T17:18:24 PST" name="tearDown" finished-at="2024-01-22T17:18:24 PST" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.luma.ecommerce.testcases.Sales_Purchase -->
      <class name="org.luma.ecommerce.testcases.Negative_Validation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:org.luma.ecommerce.testcases.Negative_Validation@e70f13a]" started-at="2024-01-22T17:16:03 PST" name="launchApplication" finished-at="2024-01-22T17:16:14 PST" duration-ms="10479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginNegative_Validation()[pri:0, instance:org.luma.ecommerce.testcases.Negative_Validation@e70f13a]" started-at="2024-01-22T17:16:14 PST" name="loginNegative_Validation" finished-at="2024-01-22T17:16:22 PST" duration-ms="7901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginNegative_Validation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:org.luma.ecommerce.testcases.Negative_Validation@e70f13a]" started-at="2024-01-22T17:16:22 PST" name="tearDown" finished-at="2024-01-22T17:16:23 PST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- org.luma.ecommerce.testcases.Negative_Validation -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
